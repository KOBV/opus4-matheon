<?php
/**
 * This file is part of OPUS. The software OPUS has been originally developed
 * at the University of Stuttgart with funding from the German Research Net,
 * the Federal Department of Higher Education and Research and the Ministry
 * of Science, Research and the Arts of the State of Baden-Wuerttemberg.
 *
 * OPUS 4 is a complete rewrite of the original OPUS software and was developed
 * by the Stuttgart University Library, the Library Service Center
 * Baden-Wuerttemberg, the Cooperative Library Network Berlin-Brandenburg,
 * the Saarland University and State Library, the Saxon State Library -
 * Dresden State and University Library, the Bielefeld University Library and
 * the University Library of Hamburg University of Technology with funding from
 * the German Research Foundation and the European Regional Development Fund.
 *
 * LICENCE
 * OPUS is free software; you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the Licence, or any later version.
 * OPUS is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details. You should have received a copy of the GNU General Public License
 * along with OPUS; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 * @category    Application
 * @package     Module_Solrsearch
 * @author      Julian Heise <heise@zib.de>
 * @author      Sascha Szott <szott@zib.de>
 * @author      Jens Schwidder <schwidder@zib.de>
 * @copyright   Copyright (c) 2008-2017, OPUS 4 development team
 * @license     http://www.gnu.org/licenses/gpl.html General Public License
 */
?>

<?php
if($this->jQueryEnabled()) {
    $this->headScript()->appendScript("$(document).ready(function () { $('.abstractText').hide(); });");
}
?>

<?php
    $this->headLink(array(
        'rel' => 'alternate',
        'type' => 'application/rss+xml',
        'href' => $this->serverUrl() . $this->url($this->rssUrl)
    ));
?>

<?php if (isset($this->specialTitle)) : ?>
    <h2><?= htmlspecialchars($this->specialTitle) ?></h2>
<?php endif ?>

<div class="content">
    <?PHP
    if ($this->searchType === 'simple' && !$this->browsing)
        include('simpleSearchForm.phtml');
    else if (($this->searchType === 'advanced' || $this->searchType === 'authorsearch') && !$this->browsing) {
        echo $this->form;
    }
    else if ($this->searchType === 'collection')
        include('browsecollection.phtml');
    else if ($this->searchType === 'series')
        include('browseseries.phtml');
    ?>
</div>
<div class="content">
    <?php if (!$this->isSimpleList) include('facetsMenu.phtml'); ?>
    <div id="searchbar">
        <div class="breadcrumb_results">
            <?php if (!isset($this->specialTitle) || $this->browsing) : ?>
                <h3><span id="search-result-numofhits"><?= $this->numOfHits . '</span> ' . ($this->numOfHits === 1 ? $this->translate('results_title_single') : $this->translate('results_title')); ?></h3>
            <?php endif ?>
            <?php if (!$this->isSimpleList) include('pagination.phtml'); ?>
            <?PHP if ($this->exportLinksEnabled('search')) : ?>
            <div class="export-links dropdown">
                <button class="dropdown-button">Export</button>
                <?= $this->exportLinks(null, 'search') ?>
            </div>
            <?PHP endif ?>
            <div class="option-links dropdown">
                <button class="dropdown-button"><?= $this->rows ?></button>
                <?= $this->resultsPerPageOptions() ?>
            </div>
        </div>
        <?php if (!$this->isSimpleList) include('searchOptions.phtml'); ?>
        <?php if (!is_null($this->results)) : ?>
            <div id="search_results" class="search_results">
                <?php $rowCount = 0; ?>
                <?PHP foreach($this->results as $result) : ?>
                    <?php
                    $document = $result->getDocument();

                    // TODO this is ugly (parameter automatisch Ã¼bernehmen?) - put it somewhere else (view helper)
                    $frontdoorUrl = $this->url(array(
                        'module' => 'frontdoor', 'controller' => 'index', 'action' => 'index',
                        'docId' => $document->getId(),
                        'start' => $this->start + $rowCount,
                        'rows' => $this->rows,
                        'searchtype' => $this->searchType
                    ));
                    ?>
                    <div class="result_box <?= $rowCount++ % 2 === 0 ? 'even' : 'odd'; ?>">
                        <?= $this->fulltextLogo($document) ?>
                        <?php if (isset($this->seriesId) && $this->seriesId && !is_null($result->getSeriesNumber( $this->seriesId ))) : ?>
                            <div class="results_seriesnumber"><?= htmlspecialchars($result->getSeriesNumber( $this->seriesId )); ?></div>
                        <?php endif ?>

                        <div class="results_title">

                            <?php if (!is_null($result->getAsset('title'))) : ?>
                                <a href="<?= $frontdoorUrl ?>"><?= $this->documentTitle($document) ?></a>
                            <?php else: ?>
                                <a href="<?= $frontdoorUrl ?>" class="missing_title"><?= $this->translate('results_missingtitle') ?></a>
                            <?php endif ?>

                            <?php if ($result->getAsset( 'year' )) : ?>
                                (<?= htmlspecialchars($result->getAsset( 'year' )); ?>)
                            <?php endif ?>
                        </div>
                        <?php if (!is_null($result->getAsset( 'author' ))) : ?>
                            <div class="results_author">
                                <?php foreach($result->getAsset( 'author' ) as $authorIndex => $author) :
                                    $authorSearch = $this->authorSearch;
                                    $authorSearch['author'] = '"'.$author.'"';
                                ?>
                                    <?PHP if ($authorIndex !== 0) : ?> ; <?PHP endif ?>
                                    <a href="<?= $this->url($authorSearch, null, true); ?>"><?= htmlspecialchars($author) ?></a>
                                <?php endforeach ?>
                            </div>
                        <?php endif ?>
                        <?php if ($this->jQueryEnabled()) : ?>
                            <div class="abstract-wrapper">
                            <?php if (!is_null($result->getAsset( 'abstract' ))) : ?>
                                <a id="abstractToggle_<?= $document->getId() ?>"
                                   class="abstract-toggle collapsed"
                                   title="<?= $this->translate('results_hideabstract_title') ?>"
                                   onclick="return toggleAbstract(<?= $document->getId() ?>)"></a>
                            <?php endif ?>
                                <div class="abstractText" id="abstractText_<?= $document->getId() ?>"><?= $this->documentAbstract($document) ?></div>
                            </div>
                        <?php endif ?>
                    </div>
                <?php endforeach ?>
            </div>
        <?php endif ?>
        <div class="breadcrumb_results">
            <?php if (!$this->isSimpleList) include('pagination.phtml') ?>
        </div>
    </div>
</div>
